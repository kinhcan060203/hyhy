from flask import Flask, request
from flask_socketio import SocketIO, emit

app = Flask(__name__)
app.config["SECRET_KEY"] = "secret!"
socketio = SocketIO(app, cors_allowed_origins="*")

clients = set()


@socketio.on("connect")
def handle_connect():
    clients.add(request.sid)
    print(f"ðŸŸ¢ Client {request.sid} Ä‘Ã£ káº¿t ná»‘i!")
    emit("server_message", {"message": "Báº¡n Ä‘Ã£ káº¿t ná»‘i Ä‘áº¿n signaling server."})


@socketio.on("disconnect")
def handle_disconnect():
    clients.discard(request.sid)
    print(f"ðŸ”´ Client {request.sid} Ä‘Ã£ ngáº¯t káº¿t ná»‘i!")


@socketio.on("offer")
def handle_offer(data):
    print(f"ðŸ“© Nháº­n OFFER tá»« {request.sid}: {data}")
    emit("offer", data, broadcast=True, include_self=False)  # Gá»­i Ä‘áº¿n cÃ¡c client khÃ¡c


@socketio.on("call")
def handle_answer(data):
    print(f"ðŸ“© Nháº­n call tá»« {request.sid}: {data}")
    emit("call", data, broadcast=True, include_self=False)  # Gá»­i Ä‘áº¿n cÃ¡c client khÃ¡c


@socketio.on("call.offer")
def handle_request_call(data):
    print(f"ðŸ“© Nháº­n request call tá»« {request.sid}: {data}")
    emit(
        "call.offer", data, broadcast=True, include_self=False
    )  # Gá»­i Ä‘áº¿n cÃ¡c client khÃ¡c


@socketio.on("call.answer")
def handle_answer_call(data):
    print(f"ðŸ“© Nháº­n answer call tá»« {request.sid}: {data}")
    emit("call.answer", data, broadcast=True, include_self=False)

# http://45.118.136.10:8006/Device/Gps
@app.route("/")
def index():
    return "ðŸ”¥ WebRTC Signaling Server Ä‘ang cháº¡y!"


if __name__ == "__main__":
    socketio.run(app, host="0.0.0.0", port=6173, debug=True)
